#!/usr/bin/env bash
# torque/compute-remote-taskinit -- Performs necessary setup before actual task is run.
# 
# This script is somewhat confusing, since it's meant to be run in the submission node.
# Therefore, the environment variables need to be relative to the submission node. For
# example, DEEPDIVE_APP needs to point to the path of the application in the submission
# node. 
##
set -euo pipefail

# Prepare submission script
{
  echo "#PBS -N $DEEPDIVE_CURRENT_PROCESS_NAME"
  if [[ $NUM_PROCESSES -gt 1 ]]; then
      echo "#PBS -l ncpus=1,nodes=$NUM_PROCESSES"
      echo "#PBS -t 0-$((NUM_PROCESSES - 1))"
  fi
  echo "#PBS -o $REMOTE_OUT_DIR"
  echo "#PBS -e $REMOTE_ERR_DIR"
  echo
  echo "export DEEPDIVE_APP=\"$DEEPDIVE_APP\""
  echo 'export PYTHONPATH=$(deepdive whereis installed)/lib/python:$PYTHONPATH'
  if [[ $NUM_PROCESSES -gt 1 ]]; then
      echo 'INPUT_ID=$(printf "%04d" $PBS_ARRAYID)'
      echo '"$SHELL"'" -c \"$COMMAND\" < \"$REMOTE_IN_DIR."'$INPUT_ID'"\""
  else
      echo '"$SHELL"'" -c \"$COMMAND\" < \"$REMOTE_IN_DIR\""
  fi
} > $REMOTE_SH_DIR

# And split data if necessary
if [[ -d $REMOTE_IN_DIR ]] && [[ $NUM_PROCESSES -gt 1 ]]; then
  local total_lines=$(wc -l < $REMOTE_IN_DIR)
  split -d -l $((total_lines / NUM_PROCESSES + 1)) -a 4 $REMOTE_IN_DIR $REMOTE_IN_DIR.
fi
